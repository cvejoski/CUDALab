%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./Plots/Training.eps
%%Creator: gnuplot 4.6 patchlevel 0
%%CreationDate: Sun May 18 20:48:34 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -33 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./Plots/Training.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 0)
  /Author (cve)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun May 18 20:48:34 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 100 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 1 ] def
/RedA [1 0 ] def
/GreenA [0 0 ] def
/BlueA [0 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
370 320 M
63 0 V
6586 0 R
-63 0 V
stroke
310 320 M
[ [(Helvetica) 100.0 0.0 true true 0 (-3)]
] -33.3 MRshow
1.000 UL
LTb
370 872 M
63 0 V
6586 0 R
-63 0 V
stroke
310 872 M
[ [(Helvetica) 100.0 0.0 true true 0 (-2)]
] -33.3 MRshow
1.000 UL
LTb
370 1425 M
63 0 V
6586 0 R
-63 0 V
stroke
310 1425 M
[ [(Helvetica) 100.0 0.0 true true 0 (-1)]
] -33.3 MRshow
1.000 UL
LTb
370 1977 M
63 0 V
6586 0 R
-63 0 V
stroke
310 1977 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0)]
] -33.3 MRshow
1.000 UL
LTb
370 2530 M
63 0 V
6586 0 R
-63 0 V
stroke
310 2530 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1)]
] -33.3 MRshow
1.000 UL
LTb
370 3082 M
63 0 V
6586 0 R
-63 0 V
stroke
310 3082 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 2)]
] -33.3 MRshow
1.000 UL
LTb
370 3634 M
63 0 V
6586 0 R
-63 0 V
stroke
310 3634 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 3)]
] -33.3 MRshow
1.000 UL
LTb
370 4187 M
63 0 V
6586 0 R
-63 0 V
stroke
310 4187 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 4)]
] -33.3 MRshow
1.000 UL
LTb
370 4739 M
63 0 V
6586 0 R
-63 0 V
stroke
310 4739 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 5)]
] -33.3 MRshow
1.000 UL
LTb
1035 320 M
0 63 V
0 4356 R
0 -63 V
stroke
1035 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0)]
] -33.3 MCshow
1.000 UL
LTb
2365 320 M
0 63 V
0 4356 R
0 -63 V
stroke
2365 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 2)]
] -33.3 MCshow
1.000 UL
LTb
3695 320 M
0 63 V
0 4356 R
0 -63 V
stroke
3695 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 4)]
] -33.3 MCshow
1.000 UL
LTb
5024 320 M
0 63 V
0 4356 R
0 -63 V
stroke
5024 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 6)]
] -33.3 MCshow
1.000 UL
LTb
6354 320 M
0 63 V
0 4356 R
0 -63 V
stroke
6354 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 8)]
] -33.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
370 4739 N
370 320 L
6649 0 V
0 4419 V
-6649 0 V
Z stroke
LCb setrgbcolor
80 2529 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 (x2)]
] -33.3 MCshow
grestore
LTb
LCb setrgbcolor
3694 70 M
[ [(Helvetica) 100.0 0.0 true true 0 (x1)]
] -33.3 MCshow
LTb
3694 4889 M
[ [(Helvetica) 100.0 0.0 true true 0 (Logistic Regression - Training Data \(240 points\))]
] -33.3 MCshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
0 g 0 g 1912 2035 CircleF
0 g 1005 2717 CircleF
0 g 1967 2260 CircleF
0 g 1716 2572 CircleF
0 g 2878 2617 CircleF
0 g 1401 1542 CircleF
0 g 2317 2485 CircleF
0 g 1948 2335 CircleF
0 g 2484 2093 CircleF
0 g 2511 2163 CircleF
0 g 3108 2367 CircleF
0 g 1769 2762 CircleF
0 g 2946 476 CircleF
0 g 2761 3303 CircleF
0 g 2667 2480 CircleF
0 g 1320 1970 CircleF
0 g 2444 2162 CircleF
0 g 2339 2027 CircleF
0 g 2123 3512 CircleF
0 g 1915 2775 CircleF
0 g 2864 2589 CircleF
0 g 928 1409 CircleF
0 g 1417 2037 CircleF
0 g 2296 2742 CircleF
0 g 2215 2684 CircleF
0 g 1936 1482 CircleF
0 g 3004 2635 CircleF
0 g 2024 3380 CircleF
0 g 1388 2500 CircleF
0 g 1814 2280 CircleF
0 g 1820 2138 CircleF
0 g 3776 1833 CircleF
0 g 1665 2932 CircleF
0 g 1307 2498 CircleF
0 g 1712 2380 CircleF
0 g 3366 2270 CircleF
0 g 1931 2054 CircleF
0 g 2229 2506 CircleF
0 g 3594 2741 CircleF
0 g 1636 2317 CircleF
0 g 2535 2565 CircleF
0 g 993 3263 CircleF
0 g 3105 3089 CircleF
0 g 2230 2821 CircleF
0 g 2284 2279 CircleF
0 g 2400 1291 CircleF
0 g 2997 1272 CircleF
0 g 2426 2718 CircleF
0 g 3539 2181 CircleF
0 g 3168 2831 CircleF
0 g 1888 791 CircleF
0 g 3390 2445 CircleF
0 g 1578 2441 CircleF
0 g 2112 2583 CircleF
0 g 2187 2117 CircleF
0 g 3100 1613 CircleF
0 g 943 2213 CircleF
0 g 2198 3342 CircleF
0 g 1367 3382 CircleF
0 g 1835 2934 CircleF
0 g 3177 2192 CircleF
0 g 2464 2170 CircleF
0 g 2616 2893 CircleF
0 g 2018 3009 CircleF
0 g 1869 2990 CircleF
0 g 3154 1822 CircleF
0 g 2507 3360 CircleF
0 g 3004 3072 CircleF
0 g 2895 3555 CircleF
0 g 3302 3250 CircleF
0 g 2736 3790 CircleF
0 g 2582 2404 CircleF
0 g 2691 2418 CircleF
0 g 1224 3120 CircleF
0 g 1997 1873 CircleF
0 g 2714 2296 CircleF
0 g 1641 3045 CircleF
0 g 1702 1708 CircleF
0 g 1988 2197 CircleF
0 g 2326 2091 CircleF
0 g 1692 2609 CircleF
0 g 2271 2742 CircleF
0 g 2014 2751 CircleF
0 g 2918 2263 CircleF
0 g 2034 3542 CircleF
0 g 2334 1643 CircleF
0 g 2706 1609 CircleF
0 g 1972 2825 CircleF
0 g 2491 1939 CircleF
0 g 1764 2429 CircleF
0 g 2090 2014 CircleF
0 g 2917 2317 CircleF
0 g 2031 2124 CircleF
0 g 2601 3787 CircleF
0 g 1715 3461 CircleF
0 g 2486 2304 CircleF
0 g 2103 3225 CircleF
0 g 1836 2130 CircleF
0 g 2650 2162 CircleF
0 g 2406 3218 CircleF
0 g 2275 2289 CircleF
0 g 2520 2002 CircleF
0 g 2267 1495 CircleF
0 g 2335 1393 CircleF
0 g 2310 2369 CircleF
0 g 1952 2305 CircleF
0 g 1569 3490 CircleF
0 g 2561 2502 CircleF
0 g 1273 1707 CircleF
0 g 1914 1763 CircleF
0 g 2521 2410 CircleF
0 g 1662 2583 CircleF
0 g 1759 2390 CircleF
0 g 2170 2476 CircleF
0 g 1409 3068 CircleF
0 g 3194 2115 CircleF
0 g 2066 2333 CircleF
0 g 2711 2084 CircleF
0 g 1985 2109 CircleF
0 g 2359 2386 CircleF
1 g 3366 2554 CircleF
1 g 3991 2633 CircleF
1 g 3914 3054 CircleF
1 g 3883 2313 CircleF
1 g 2918 1731 CircleF
1 g 3559 2070 CircleF
1 g 4527 3092 CircleF
1 g 3107 2738 CircleF
1 g 4100 2635 CircleF
1 g 3824 2056 CircleF
1 g 5588 1819 CircleF
1 g 3230 1947 CircleF
1 g 3979 3373 CircleF
1 g 4138 2419 CircleF
1 g 2242 2251 CircleF
1 g 4299 2249 CircleF
1 g 3530 2351 CircleF
1 g 4618 2448 CircleF
1 g 3738 2866 CircleF
1 g 4538 2513 CircleF
1 g 4462 2740 CircleF
1 g 3492 2437 CircleF
1 g 5227 3249 CircleF
1 g 4712 2504 CircleF
1 g 3924 2568 CircleF
1 g 3858 2604 CircleF
1 g 4218 2726 CircleF
1 g 4293 2166 CircleF
1 g 4350 3028 CircleF
1 g 4681 2579 CircleF
1 g 3728 2656 CircleF
1 g 4116 2902 CircleF
1 g 3860 2369 CircleF
1 g 4017 1829 CircleF
1 g 4088 2240 CircleF
1 g 4978 2157 CircleF
1 g 3025 2389 CircleF
1 g 4183 1788 CircleF
1 g 4340 2265 CircleF
1 g 3155 2132 CircleF
1 g 4016 3681 CircleF
1 g 4889 3409 CircleF
1 g 4650 3113 CircleF
1 g 4612 2714 CircleF
1 g 3067 2064 CircleF
1 g 4285 2356 CircleF
1 g 3744 3515 CircleF
1 g 4966 3156 CircleF
1 g 1622 2387 CircleF
1 g 3868 2615 CircleF
1 g 3280 3467 CircleF
1 g 4228 2511 CircleF
1 g 3180 2986 CircleF
1 g 2671 2518 CircleF
1 g 3200 2297 CircleF
1 g 4014 2492 CircleF
1 g 3441 3407 CircleF
1 g 4378 701 CircleF
1 g 3818 2762 CircleF
1 g 4735 1795 CircleF
1 g 4494 2869 CircleF
1 g 3908 2342 CircleF
1 g 2824 1982 CircleF
1 g 4329 3803 CircleF
1 g 3236 2919 CircleF
1 g 4302 2262 CircleF
1 g 4908 2358 CircleF
1 g 6182 3270 CircleF
1 g 3678 2519 CircleF
1 g 3780 1891 CircleF
1 g 3543 2398 CircleF
1 g 3654 3330 CircleF
1 g 4513 1871 CircleF
1 g 3124 2393 CircleF
1 g 4175 2214 CircleF
1 g 4307 2092 CircleF
1 g 4329 2143 CircleF
1 g 4310 2566 CircleF
1 g 3239 3046 CircleF
1 g 3908 2040 CircleF
1 g 4543 1534 CircleF
1 g 4487 1817 CircleF
1 g 3353 2268 CircleF
1 g 4433 3626 CircleF
1 g 4106 2593 CircleF
1 g 3639 3005 CircleF
1 g 4271 3100 CircleF
1 g 3370 2142 CircleF
1 g 4688 3238 CircleF
1 g 4197 2563 CircleF
1 g 3665 2738 CircleF
1 g 5810 3138 CircleF
1 g 3260 2162 CircleF
1 g 4562 2604 CircleF
1 g 4735 3071 CircleF
1 g 2578 2494 CircleF
1 g 4291 2465 CircleF
1 g 3836 2996 CircleF
1 g 3903 3076 CircleF
1 g 3717 2757 CircleF
1 g 3722 2533 CircleF
1 g 4520 2807 CircleF
1 g 3983 2660 CircleF
1 g 3057 2423 CircleF
1 g 4380 2540 CircleF
1 g 2603 2624 CircleF
1 g 3070 1988 CircleF
1 g 3996 2298 CircleF
1 g 4504 2403 CircleF
1 g 4572 2808 CircleF
1 g 3367 2730 CircleF
1 g 4179 1928 CircleF
1 g 4964 3080 CircleF
1 g 3626 2105 CircleF
1 g 2842 2213 CircleF
1 g 3396 3318 CircleF
1 g 3374 3477 CircleF
1 g 3995 1888 CircleF
1 g 4475 2636 CircleF
1 g 4933 3315 CircleF
% End plot #1
% Begin plot #2
1.000 UL
LT1
0.00 0.00 0.00 C LCb setrgbcolor
6536 4626 M
[ [(Helvetica) 100.0 0.0 true true 0 (Decision Boundary)]
] -33.3 MRshow
LT1
0.00 0.00 0.00 C 6596 4626 M
303 0 V
2961 320 M
28 1318 V
67 3101 V
% End plot #2
stroke
LTb
370 4739 N
370 320 L
6649 0 V
0 4419 V
-6649 0 V
Z stroke
1.000 UP
1.000 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
